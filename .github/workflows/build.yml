name: Picasso V2

on:
  workflow_call:
    inputs:
      STRAIN_REPOSITORY:
        description: 'The repository for strains to checkout. It should follow the format: ORGANIZATION/REPO'
        required: true
        type: string
      STRAIN_REPOSITORY_BRANCH:
        description: 'The branch of the repository to checkout'
        required: true
        type: string
      STRAIN_PATH:
        description: 'The path within the repository for strains'
        required: true
        type: string
      SERVICE:
        description: 'The service name to build'
        required: true
        type: string
      ENABLE_LIMIT_BUILDKIT_PARALLELISM:
        description: 'Enable buildkit parallelism limit to decrease resource usage. Default is true'
        required: false
        type: boolean
        default: true
    secrets:
      DOCKERHUB_USERNAME:
        description: 'DockerHub username for login'
        required: true
      DOCKERHUB_PASSWORD:
        description: 'DockerHub password for login'
        required: true
      SSH_PRIVATE_KEY:
        description: 'Service user SSH key for repository checkout'
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Checkout strains repository
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.STRAIN_REPOSITORY }}
          ref: ${{ inputs.STRAIN_REPOSITORY_BRANCH }}
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Get Tutor configuration values and set them as environment variables
        shell: bash
        run: |
          TUTOR_APP_NAME=$(python ${{ github.action_path }}/scripts/get_tutor_config_value.py TUTOR_APP_NAME)
          TUTOR_VERSION=$(python ${{ github.action_path }}/scripts/get_tutor_config_value.py TUTOR_VERSION)

          echo "TUTOR_APP_NAME=$TUTOR_APP_NAME" >> $GITHUB_ENV
          echo "TUTOR_VERSION=$TUTOR_VERSION" >> $GITHUB_ENV

      - name: Install TVM
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}
        run: |
          pip install git+https://github.com/eduNEXT/tvm.git

      - name: Configure TVM project
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}
        run: |
          tvm install $TUTOR_VERSION
          tvm project init $TUTOR_APP_NAME $TUTOR_VERSION

          # This command copies all the files and folders
          # from the repository STRAIN_PATH to the recently above created TVM PROJECT folder
          cp -r $(ls --ignore=$TUTOR_APP_NAME) $TUTOR_APP_NAME/

      - name: Enable picasso plugin
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}/${{ env.TUTOR_APP_NAME }}
        run: |
          . .tvm/bin/activate

          pip install git+https://github.com/eduNEXT/tutor-contrib-picasso@v0.1.0
          tutor plugins enable picasso

      - name: Setup SSH agent for private repositories cloning
        uses: webfactory/ssh-agent@v0.9.0
        with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add GitHub to known hosts
        shell: bash
        run: |
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      - name: Execute extra commands
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}/${{ env.TUTOR_APP_NAME }}
        run: |
          . .tvm/bin/activate
          tutor picasso run-extra-commands

      - name: Limit build parallelism to decrease resource usage
        if: ${{ inputs.ENABLE_LIMIT_BUILDKIT_PARALLELISM }}
        shell: bash
        run: |
          echo "[worker.oci]
          max-parallelism = 3" > buildkit.toml
          docker buildx create --use --node=limitparallelsteps --driver=docker-container --config=./buildkit.toml

      - name: Build service image with no cache
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}/${{ env.TUTOR_APP_NAME }}
        env:
          SERVICE: ${{ inputs.SERVICE }}
        run: |
          . .tvm/bin/activate
          tutor config save
          tutor images build $SERVICE --no-cache

      - name: Push service image to DockerHub
        shell: bash
        working-directory: ${{ inputs.STRAIN_PATH }}/${{ env.TUTOR_APP_NAME }}
        env:
          SERVICE: ${{ inputs.SERVICE }}
        run: |
          . .tvm/bin/activate
          tutor images push $SERVICE
